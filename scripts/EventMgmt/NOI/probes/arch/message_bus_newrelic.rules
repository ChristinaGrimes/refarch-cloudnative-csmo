########################################################################
#
#       Licensed Materials - Property of IBM
#       
#       
#       
#       (C) Copyright IBM Corp. 2015. All Rights Reserved
#       
#       US Government Users Restricted Rights - Use, duplication
#       or disclosure restricted by GSA ADP Schedule Contract
#       with IBM Corp.
#
#
#######################################################################


if( match( @Manager, "ProbeWatch" ) )
{
	switch(@Summary)
	{
	case "Running ...":
			@Severity = 1
			@AlertGroup = "probestat"
			@Type = 2
	case "Going Down ...":
			@Severity = 5
			@AlertGroup = "probestat"
			@Type = 1
	case "Start resynchronization" | "Finish resynchronization":
			@Severity = 2
			@AlertGroup = "probestat"
			@Type = 13
	case "Connection to source lost":
			@Severity = 5
			@AlertGroup = "probestat"
			@Type = 1	
	default:
			@Severity = 1
	}
	@AlertKey = @Agent
	@Summary = @Agent + " probe on " + @Node + ": " + @Summary
}
else
{


	@Manager = %Manager + " probe running on " + hostname()
	@Node = $Node
    @NodeAlias = %Host + ":" + %Port
    @Class = 30505
	
	if (exists($TransformerName))
	{
        switch($TransformerName)
        {
            case "dummy case statement": ### This will prevent syntax errors in case no includes are added below.	

			include "message_bus_netcool.rules"
			include "message_bus_cbe.rules"
			include "message_bus_wbe.rules"
			include "message_bus_wef.rules"
	    
            default:
                log(DEBUG, "<<<<< Rules are not supported for this format >>>>")
	       
            @Summary = "Rules are not supported for this format - " + $TransformerName
        }
	}
	else
	{
		log(DEBUG, "<<<<< Entering... message_bus_newrelic.rules >>>>>")
            


	    @Manager = %Manager
	    @Class = 89210
	    @Identifier = $Identifier
	    @Node = $Node
	    @NodeAlias = $NodeAlias
	    @Agent = $Agent
	    @AlertGroup = $AlertGroup
	    @AlertKey = $AlertKey
	    @Severity = $Severity
	    @Summary = $Summary
	    @StateChange = $StateChange
	    @FirstOccurrence = $FirstOccurrence
	    @LastOccurrence = $LastOccurrence
	    @InternalLast = $InternalLast
	    @Poll = $Poll
	    @Type = $Type
	    @Tally = $Tally
	    @Class = $Class
	    @Grade = $Grade
	    @Location = $Location
	    @OwnerUID = $OwnerUID
	    @OwnerGID = $OwnerGID
	    @Acknowledged = $Acknowledged
	    @Flash = $Flash
	    @EventId = $EventId
	    @ExpireTime = $ExpireTime
	    @ProcessReq = $ProcessReq
	    @SuppressEscl = $SuppressEscl
	    @Customer = $Customer
	    @Service = $Service
	    @PhysicalSlot = $PhysicalSlot
	    @PhysicalPort = $PhysicalPort
	    @PhysicalCard = $PhysicalCard
	    @TaskList = $TaskList
	    @NmosSerial = $NmosSerial
	    @NmosObjInst = $NmosObjInst
	    @NmosCauseType = $NmosCauseType
	    @LocalNodeAlias = $LocalNodeAlias
	    @LocalPriObj = $LocalPriObj
	    @LocalSecObj = $LocalSecObj
	    @LocalRootObj = $LocalRootObj
	    @RemoteNodeAlias = $RemoteNodeAlias
	    @RemotePriObj = $RemotePriObj
	    @RemoteSecObj = $RemoteSecObj
	    @RemoteRootObj = $RemoteRootObj
	    @X733EventType = $X733EventType
	    @X733ProbableCause = $X733ProbableCause
	    @X733SpecificProb = $X733SpecificProb
	    @X733CorrNotif = $X733CorrNotif
	    @URL = $URL
	    @ExtendedAttr = $ExtendedAttr
	    @ServerName = $ServerName
	    @ServerSerial = $ServerSerial

        log (DEBUG,"Is this NewRelic?")

        if (exists($account_name)) 
	{
            log (DEBUG," yes it is NewRelic!")
            log (DEBUG," Alarm found ...!")
	    @Severity = 5
	    @Summary  = $message
	    @Type=1
            @CASE_BMX_CMDB = 1
            if(regmatch($long_description, "^Alert ended.*$") )
                {
			log (DEBUG," Clear found in fact...!")
                        @Severity = 1
		        @Summary  = "Cleared " + $message
			@Type=2
                }
	    if(regmatch($long_description, "^Alert downtime recovered.*$") )
                {
                        log (DEBUG," Clear found in fact...!")
                        @Severity = 1
                        @Summary  = "Cleared " + $message
                        @Type=2
                }

            @AlertGroup = "New Relic"
	    @URL	= $alert_url
	    #@Identifier = $alert_url + "_" + $alert_policy_name + "_" + @Type

            if(regmatch($short_description, "^New alert on .*$") )
                        {
                                @Node   = extract ($short_description,"New alert on (.*)")
                                @AlertGroup ="NewRelic server"
                        }
	    if(regmatch($short_description, "^Escalated severity on .*$") )
                        {
                                @Node   = extract ($short_description,"Escalated severity on (.*)")
                                @AlertGroup ="NewRelic downtime"
                        }
	    if (exists($application_name)) 
	    {
				@Node	= $application_name
				@AlertGroup = "NewRelic application"
            } 
	    @Service = @Node
	    @ScopeID = @Node
	    @Class	= 70000
	    @FirstOccurrence = datetotime($created_at,  "YYYY-MM-ddTHH:mm:ss-TZD")
	    #2016-09-15T03:02:03-07:00	
	    @AlertKey  = $alert_policy_name
	    @Agent = "NewRelic"
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + @Type + " " + @Agent + " " + @Manager
            log(DEBUG, "Probe received NewRelic event : " + @Summary + " for Node " + @Node + " : " + @Identifier)
        }
    	log(DEBUG, "<<<<< Leaving... message_bus_newrelic.rules >>>>>")
	#@Severity = 3		
	}
}
   
details($*) 
